package components

import "fmt"
import "github.com/ikaio/tailmplx/help"
import "github.com/ikaio/tailmplx/services/production"
import "github.com/ikaio/tailmplx/services/google"
import "github.com/ikaio/tailmplx/services/crawler"

const embed_format = "https://www.youtube.com/embed/%s?controls=0"

templ YoutubeEmbedIFrame(id string) {
	<iframe
		class="rounded h-full aspect-video"
		src={ fmt.Sprintf(embed_format, id) }
		frameborder="0" allowfullscreen
	></iframe>
}

templ landingMediaWindow(p production.Production) {
	<div class="relative flex overflow-hidden rounded bg-zinc-900">
		<img
         class="blur opacity-25 top-0 left-0 absolute w-full object-cover rounded"
         src={ p.Images.Banner }
      />
		<img class="z-10 h-60 aspect-[27/40]" src={ p.Images.Cover }/>
		<div class="z-10 overflow-x-auto flex items-center h-60 gap-2 p-2">
			@YoutubeEmbedIFrame(p.Images.Trailer)
			for _, extra := range p.Images.Extras {
				<img
					class={
                  "rounded h-full border hover:border-white",
                  border(p.PostProcess.PrimaryColor)
               }
					src={ extra.Url }
				/>
			}
		</div>
	</div>
}

templ landingPrimaryInfo(p production.Production, rd ProductionRatingData) {
	<div class="flex flex-col mt-2">
		<div class="flex items-center justify-between">
			<div class="flex flex-col">
				<span class="font-semibold text-lg leading-none">{ p.Title }</span>
				{ help.JoinAnd(p.Genres, ",", ", ", "&") }
			</div>
			@ProductionRating(p, rd)
		</div>
		@templ.Raw("<div class=\"markdown\">" + production.MarkdownToHTML(p.Description) + "</div>")
	</div>
}


templ ProductionLanding(p production.Production, c *google.GoogleCredential, rd ProductionRatingData) {
   @landingMediaWindow(p)
   @landingPrimaryInfo(p, rd)
	<div class="mt-6 flex flex-col gap-1">
		for _, download := range p.Downloads {
			@Magnet(download, mediaNameProcessor)
		}
	</div>
	<div class="mt-6">
		if c != nil {
			<form
				hx-post={ p.ID + "/comment" }
				hx-encoding="multipart/form-data"
				hx-target="next div" hx-swap="afterbegin"
				class="h-10 gap-1 flex items-center"
			>
				<img class="h-full rounded" src={ c.Picture }/>
				<input
					name="content"
					placeholder="Write a comment about this."
					class="px-4 w-full border-2 border-zinc-800 focus:border-zinc-700 rounded h-full placeholder:black"
				/>
				<button
					class="h-full px-2 py-1 rounded bg-zinc-800 hover:bg-zinc-700 font-bold text-zinc-100 flex gap-1 items-center"
					type="submit"
				>
					@IconSend()
					Send
				</button>
			</form>
		} else {
			@GoogleOneTapPrompt("/production/"+p.ID, true)
		}
		<div class="mt-3 flex flex-col gap-1">
			if comments, err := production.GatherCommentsFor(p.ID); err == nil {
				for i, comment := range comments {
					@Comment(*comment, help.Tenary(i%2 == 0, "bg-zinc-100", "bg-zinc-200"))
				}
			}
		</div>
	</div>
}

