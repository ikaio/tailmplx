package components

import "github.com/ikaio/tailmplx/services/production"
import "github.com/go-chi/chi/v5"
import "fmt"

templ PageProductionSlugEdit(props PageProps) {
	if p, err := production.GetById(chi.URLParam(props.Request, "id")); err == nil {
		@ProductionEditor(*p)
	}
}

css border(color string) {
	border-color: { color };
}

const gradient = "$el.style.background = 'linear-gradient(to top right, %s, transparent)'"

templ ProductionCard(p *production.Production) {
	<a
		href={ templ.URL("/production/" + p.ID) }
		class="w-60 flex-[0_0_auto] snap-start aspect-video gap-1 flex flex-col shadow rounded overflow-hidden"
	>
		<div class="p-2 w-full flex items-end aspect-video relative">
			<img class={ "z-10 h-4/5 border-2 relative aspect-[27/40]", border(p.PostProcess.PrimaryColor) } src={ p.Images.Cover }/>
			<img class="top-0 left-0 w-full absolute" src={ p.Images.Banner }/>
			<div
				x-init={ fmt.Sprintf(gradient, p.PostProcess.PrimaryColor) }
				class="top-0 left-0 w-full h-full absolute rounded"
			></div>
		</div>
	</a>
}

type ProductionSlidesOption struct {
	Name        string
	Description string
}

templ ProductionSlide(o ProductionSlidesOption, ps []*production.Production) {
	<div class="flex flex-col">
		<span class="leading-none font-semibold">{ o.Name }</span>
		<span class="leading-none text-sm opacity-75">{ o.Description }</span>
		<div class="snap-x flex overflow-x-auto gap-1 mt-2">
			for _, p := range ps {
				@ProductionCard(p)
			}
		</div>
	</div>
}
