package ui

import "net/http"
import "encoding/json"
import "fmt"
import "github.com/ikaio/tailmplx/internal/database"
import "github.com/ikaio/tailmplx/internal/help"

templ NotFound(r *http.Request) {
	<div class="max-w-[750px] flex flex-col gap-2">
		<h1 class="font-bold text-2xl">404: { r.URL.Path }</h1>
		Sorry, we could not find the page you were looking for, it may have been deleted or there is a typo.
		<div class="flex items-center gap-2">
			@B("/") {
				@IconUndo()
				return home
			}
			@B("/report") {
				@IconBug()
				report an issue
			}
		</div>
	</div>
}

var gradient = "$el.style.background = 'linear-gradient(to top right, %s, transparent)'"

templ DisplayProduction(p *database.Production) {
	<a class="w-full sm:max-w-[200px] p-2 gap-1 flex flex-col border border-zinc-300 shadow rounded" href={ templ.URL(fmt.Sprintf("/production/%s", p.ID)) }>
		<div class="p-2 w-full flex items-end aspect-video relative">
			<img class="z-10 w-14 shadow-lg relative aspect-[27/40]" src={ p.Images.Cover }/>
			<img class="top-0 left-0 w-full absolute rounded" src={ p.Images.Banner }/>
			<div x-init={ fmt.Sprintf(gradient, p.Properties.PrimaryColor) } class="top-0 left-0 w-full h-full absolute rounded"></div>
		</div>
		<span class="leading-none font-medium">{ p.Title }</span>
		<span class="leading-none text-xs">{ help.CommaList(p.Genres) }</span>
		<span class="text-xs text-zinc-600 leading-none">{ p.Description }</span>
	</a>
}

templ Home(r *http.Request) {
	<div class="flex flex-wrap gap-1">
		if productions, err := database.ListProductions(100); err == nil {
			for _, production := range productions {
				@DisplayProduction(production)
			}
		}
	</div>
}

func getMovie() string {
	movie := database.Production{
		database.SF.Generate().String(),
		"Career Opportunities",
		"Example description...",
		"comedy, humor",
		database.ProductionImages{
			"https://1.bp.blogspot.com/-tPu459S4-iU/WqBd01xoXsI/AAAAAAAAJSA/m7yZWIXNQgsm5WsAAzWQKRm9tPy1hi_PgCLcBGAs/s1600/Construindo%2Buma%2BCarreira%2Btorrent%2Bdownload%2Bdublado%2Bbluray.jpg",
			"https://e1.pxfuel.com/desktop-wallpaper/616/921/desktop-wallpaper-jennifer-connelly-career-opportunities.jpg",
			[]database.ProductionImagesExtra{},
		},
		[]database.ProductionDownload{
			{"Dual √Åudio 720p", "magnet:?xt=urn:btih:4300F3865E8C8357B48A549D6C21F4B8ECD0E885&dn=Construindo+Uma+Carreira+%5B1991%5D+rmz+WebDL+720p+Dual+PESADO+jefspfc+filmesmega&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Fopen.demonii.com%3A1337&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce"},
		},
		database.ProductionProperties{},
	}

	b, _ := json.Marshal(movie)
	return string(b)
}

templ input(label, model, placeholder string) {
	<div class="max-w-max flex flex-col">
		<h3 class="text-xs leading-loose text-zinc-500">{ label }</h3>
		<input x-model={ model } placeholder={ placeholder } class="px-2 py-1 border border-zinc-500/25 text-zinc-700 focus:text-zinc-800"/>
	</div>
}

const AMBER = "bg-amber-100 hover:bg-amber-200 border-amber-800 text-amber-800"
const DANGER = "bg-red-100 hover:bg-red-200 border-red-800 text-red-800"
const SAFE = "bg-emerald-100 hover:bg-emerald-200 border-emerald-800 text-emerald-800"

templ button(onclick, variant string) {
	<button class={ "px-2 py-1 my-2 h-max w-max text-sm font-semibold rounded border " + variant } type="button" @click={ onclick }>
		{ children... }
	</button>
}

templ section(name, description string) {
	<div class="w-full border border-zinc-500/20">
		<div @click={ fmt.Sprintf("state.show_%s = !state.show_%s", name, name) } class="p-2 flex flex-col bg-cyan-900">
			<span class="leading-none font-bold text-white capitalize">{ name }</span>
			<span class="text-white text-xs">{ description }</span>
		</div>
		<div x-show={ fmt.Sprintf("state.show_%s", name) } class="gap-2 p-2 flex flex-wrap">
			{ children... }
		</div>
	</div>
}
