package production

import "fmt"
import "github.com/ikaio/tailmplx/internal/database"
import "github.com/ikaio/tailmplx/ui/panel"
import "encoding/json"
import "github.com/ikaio/tailmplx/ui"

const data_model = "{ data: %s, state: {}, notifications: [] }"
const reflect = "$refs.code.textContent = JSON.stringify($data.data, null, 4)"

func data(v any) string {
	b, _ := json.Marshal(v)
	return fmt.Sprintf(data_model, string(b))
}

templ Editor(production database.Production) {
	<script src="/assets/helpers.js"></script>
	<form class="flex flex-col gap-2" x-data={ data(production) } x-effect={ reflect }>
		<span>Editing: <span x-text="data.title"></span> #<span x-text="data.id"></span></span>
		<!-- Metadata Section -->
		@panel.Section("metadata", "primary informations about the title.") {
			@panel.Input("Title (should not include props like quality)", "data.title", "e.g: Career Opportunities")
			@panel.Input("Description (max: 500 chars)", "data.description", "tip: Say the year this title is from, featuring actors, directors, production company...")
			@panel.Input("Genres (separeted by comma. will be trimmed)", "data.genres", "e.g: romance, comedy, classic")
		}
		<!-- Images Section -->
		@panel.Section("images", "helps users identify this title more easily.") {
			<div class="flex flex-wrap gap-1">
				<img class="h-20 aspect-[27/40] bg-red-300" x-bind:src="data.images.cover"/>
				<img class="h-20 aspect-video bg-red-300" x-bind:src="data.images.banner"/>
				<template x-for="extra in data.images.extras">
					<img class="h-20 aspect-video bg-red-300" x-bind:src="extra.url"/>
				</template>
			</div>
			<div class="flex gap-1">
				@panel.Input("Cover Image URL", "data.images.cover", "e.g: myfile.png")
				@panel.Input("Banner Image URL", "data.images.banner", "e.g: myfile.png")
			</div>
			@panel.Section("extras", "add moments from the title, so the user can have a sneak peak of what he's gonna get from this title.") {
				<template x-for="extra in data.images.extras">
					@panel.Input("Extra Image URL", "extra.url", "e.g: myfile.png")
				</template>
				@panel.Button("data.images.extras.push({})", panel.AMBER) {
					Add Extra Image
				}
			}
		}
		<!-- Downloads Section -->
		@panel.Section("downloads", "links users will use to download the content.") {
			<template x-for="(download, i) in data.downloads">
				<div class="p-2 bg-zinc-500/5 border border-zinc-500/10">
					@panel.Input("Option Name", "download.name", "e.g: Dual √Åudio: MKV 1080p")
					@panel.Input("Option URL", "download.url", "e.g: https://drive.google.com/? or magnet://? & etc...")
					@panel.Button("data.downloads.splice(i, 1)", panel.DANGER) {
						Remove Option
					}
				</div>
			</template>
			@panel.Button("data.downloads.push({})", panel.AMBER) {
				New Download Option
			}
		}
		@panel.Section("Output", "compare the output JSON structure to make sure everything is behaving accordingly") {
			<pre class="w-full overflow-auto text-xs" x-ref="code"></pre>
		}
		@panel.Button("blockwhile($el, put($data))", panel.SAFE) {
			Save Changes
		}
		@notifications()
	</form>
}

templ notifications() {
	<template x-for="notification in notifications">
		<div class="gap-1 p-2 rounded border flex items-center" :class="notification.error ? 'text-red-800 bg-red-100 border-red-800' : 'text-emerald-800 bg-emerald-100 border-emerald-800'">
			@ui.IconAlert()
			<span class="font-bold" x-text="notification.message"></span>
		</div>
	</template>
}
